//
// Notes to End Users.
//
// The workflow should run without editing this configuration file,
// however there may be instances in which you wish to edit this
// file for compute performance or other reasons. Please see:
//
//   https://nextflow.io/docs/latest/config.html#configuration
//
// for further help editing this file.


params {

    help = false
    version = false

    disable_ping = false
    threads = 4

    aws_image_prefix = null
    aws_queue = null

    out_dir = "output"

    process_label = "wfdefault"

    // feature flags
    snp = false
    sv = false
    methyl = false
    mapula = false
    cnv = false
    str = false

    // benchmark feature flags
    sv_benchmark = false
    sv_benchmark_vcf = null
    sv_benchmark_bed = null

    // common
    fast5_dir = null
    bam = null
    ref = null
    old_ref = null
    bed = null
    out_dir = "output"
    bam_min_coverage = 20

    // basecalling
    basecaller = "dorado"
    // imported from wf-basecalling
    /// common
    basecaller_chunk_size = 25
    basecaller_cfg = "dna_r10.4.1_e8.2_400bps_sup@v4.0.0"
    basecaller_args = null
    basecaller_basemod_threads = 2
    cuda_device = "cuda:all"
    ubam_map_threads = 8
    ubam_sort_threads = 3
    ubam_bam2fq_threads = 1
    basecaller_model_path = null
    remora_model_path = null
    qscore_filter = 10
    /// dorado
    remora_cfg = null
    dorado_ext = "fast5"

    // snp
    clair3_model_path = null // used for overriding the guessed clair3 model
    // workflow options
    phase_vcf = false
    use_longphase = true
    use_longphase_intermediate = true
    // clair3 parameters
    sample_name = "SAMPLE"
    ctg_name = "EMPTY"
    include_all_ctgs = false
    ref_pct_full = 0.1
    var_pct_full = 0.7
    GVCF = false
    snp_min_af = 0.08
    indel_min_af = 0.15
    vcf_fn = "EMPTY"
    min_contig_size = 0
    min_mq = 5
    min_cov = 2
    skip_refine_snp_with_sv = false

    // sv
    tr_bed= null
    // filterCalls
    sv_types = "DEL,INS"
    min_sv_length = 30
    max_sv_length = 100000
    min_read_support = "auto"
    min_read_support_limit = 2
    // sniffles2 options
    cluster_merge_pos = 150
    sniffles_args = null

    //cnv
    bin_size = 500

    // methyl
    modbam2bed_args = null
    phase_methyl = false

    //str
    sex = "female"

    // output
    depth_intervals = false

    // nfcore
    monochrome_logs = false
    validate_params = true
    show_hidden_params = false
    schema_ignore_params = 'show_hidden_params,validate_params,monochrome_logs,aws_queue,aws_image_prefix,wf,process_label,min_sv_length,max_sv_length,min_read_support,min_read_support_limit'

    wf {
        name = "wf-human-variation"
        template_version = "195cab5"
        example_cmd = [
            "--snp",
            "--sv",
            "--bam demo_data/demo.bam",
            "--bed demo_data/demo.bed",
            "--ref demo_data/demo.fasta",
            "--basecaller_cfg 'dna_r10.4.1_e8.2_400bps_hac@v4.0.0'",
            "--sample_name MY_SAMPLE"
        ]
        agent = null

        // container sha
        e2l_base_tag = "shaa6d218582d6056ea970b73e61f138ebb0ce6c5b1"
        e2l_snp_tag = "shab73c0aea302ddd1585696ac3460635b1867780a1"
        e2l_sv_tag = "sha8e7e606633fb2b06cc9b84d0e21c22f07f8f8268"
        e2l_methyl_tag = "sha44a13bcf48db332b2277bb9f95b56d64e393a1d5"
        basecaller_container = "dorado:sha097d9c8abc39b8266e3ee58f531f5ef8944a02c3"
        cnv_tag = "shaa2eb8d075b9a8da6d5b8be6c29c2b7b772000f2b"
        str_tag = "sha8a8df7d40e0c9125ed43b347811afd14a077f94e"
    }
}

manifest {
    name            = 'epi2me-labs/wf-human-variation'
    author          = 'Oxford Nanopore Technologies'
    homePage        = 'https://github.com/epi2me-labs/wf-human-variation'
    description     = 'Basecalling, SNV calling, SV calling, methylation calling of human samples.'
    mainScript      = 'main.nf'
    nextflowVersion = '>=21.05.0'
    version         = '1.4.0'
}

epi2melabs {
    tags = "human,variant calling,whole genome,basecalling"
    icon = "faIdCard"
}

executor {
    $local {
        cpus = 16
        memory = "8 GB"
    }
}


// used by default for "standard" (docker) and singularity profiles,
// other profiles may override.
process {
    container = "ontresearch/${params.wf.name}:${params.wf.e2l_base_tag}"
    withLabel:wf_human_snp {
        container = "ontresearch/wf-human-variation-snp:${params.wf.e2l_snp_tag}"
    }
    withLabel:wf_human_sv {
        container = "ontresearch/wf-human-variation-sv:${params.wf.e2l_sv_tag}"
    }
    withLabel:wf_human_methyl {
        container = "ontresearch/wf-human-variation-methyl:${params.wf.e2l_methyl_tag}"
    }
    withLabel:wf_basecalling {
        container = "nanoporetech/${params.wf.basecaller_container}"
    }
    withLabel:wf_cnv {
        container = "ontresearch/wf-cnv:${params.wf.cnv_tag}"
    }
    withLabel:wf_human_str {
        container = "ontresearch/wf-human-variation-str:${params.wf.str_tag}"
    }
    shell = ['/bin/bash', '-euo', 'pipefail']
}


profiles {
    // the "standard" profile is used implicitely by nextflow
    // if no other profile is given on the CLI
    standard {
        docker {
            enabled = true
            // this ensures container is run as host user and group, but
            //    also adds host user to the within-container group
            runOptions = "--user \$(id -u):\$(id -g) --group-add 100"
        }
        process."withLabel:gpu".containerOptions = "--gpus all"
    }

    lsf {
        process {
            executor = 'lsf'
            queue = 'gpu'
        }
        singularity {
            enabled = true
            autoMounts = true
            //envWhitelist = "" // if your cluster sets a variable to indicate which GPU has been assigned you will want to allow it here
        }
        process."withLabel:gpu".containerOptions = "--nv"
    }

    // using singularity instead of docker
    singularity {
        singularity {
            enabled = true
            autoMounts = true
            //envWhitelist = "" // if your cluster sets a variable to indicate which GPU has been assigned you will want to allow it here
        }
        
        process."withLabel:gpu".containerOptions = "--nv"
    }


    // keep stub conda profile to prevent unknown profile warning so users get a better error
    conda {
        conda {
            enabled = true
        }
    }

    // Using AWS batch.
    // May need to set aws.region and aws.batch.cliPath
    awsbatch {
        process {
            executor = 'awsbatch'
            queue = "${params.aws_queue}"
            memory = '8G'
            withLabel:wfdefault {
                container = "${params.aws_image_prefix}-${params.wf.name}:${params.wf.e2l_base_tag}-root"
            }
            withLabel:wf_human_snp {
                container = "${params.aws_image_prefix}-wf-human-variation-snp:${params.wf.e2l_snp_tag}-root"
            }
            withLabel:wf_human_sv {
                container = "${params.aws_image_prefix}-wf-human-variation-sv:${params.wf.e2l_sv_tag}-root"
            }
            withLabel:wf_human_methyl {
                container = "${params.aws_image_prefix}-wf-human-variation-methyl:${params.wf.e2l_methyl_tag}-root"
            }
            withLabel:wf_basecalling {
                container = "${params.aws_image_prefix}-${params.wf.basecaller_container}-root"
            }
            withLabel:wf_cnv {
                container = "${params.aws_image_prefix}-wf-cnv:${params.wf.cnv_tag}-root"
            }
            withLabel:wf_human_str {
                container = "${params.aws_image_prefix}-wf-human-variation-str:${params.wf.str_tag}-root"
            }
            shell = ['/bin/bash', '-euo', 'pipefail']
        }
    }

    // local profile for simplified development testing
    local {
        process.executor = 'local'
    }
}


timeline {
  enabled = true
  file = "${params.out_dir}/execution/timeline.html"
  overwrite = true
}
report {
  enabled = true
  file = "${params.out_dir}/execution/report.html"
  overwrite = true
}
trace {
  enabled = true
  file = "${params.out_dir}/execution/trace.txt"
  overwrite = true
}

env {
    PYTHONNOUSERSITE = 1
}
